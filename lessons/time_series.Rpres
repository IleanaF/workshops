```{r setup, echo = FALSE, message = F, warning = F}
library(tidyverse)
library(WRTDStidal)
library(gridExtra)
library(grid)
library(SWMPr)
library(GGally)

# chunk options
knitr::opts_chunk$set(warning = FALSE, message = FALSE, dpi = 300, fig.align = 'center', out.width = '900px', fig.width = 8, fig.height = 4.5)

# chunk hook
knitr::knit_hooks$set(
  small.mar = function(before = FALSE, options, envir) {
    if (before) par(mar = c(4, 4, 1, 1))  # smaller margin on top and right
    }, 
  def.mar = function(before, options, envir) {
    if (before) par(mar = c(5, 4, 4, 2))
    }
  )
```
<insertHTML:[columns.html]

Analysis of Time Series Data Using R
========================================================
date: November 5, 2017
author: Marcus W Beck
autosize: true
css: frm.css
transition: none
width: 960
height: 700

```{r fig.width = 8, fig.height = 4.5, out.width = '800px', echo = F}
p1 <- prdnrmplot(tidfit, annuals = F) +
  theme(legend.position = 'none', , axis.title.y = element_blank())
p2 <- prdnrmplot(tidfit) +
  theme(legend.position = 'none', axis.title.y = element_blank())
grid.arrange(p1, p2, ncol = 1, left = textGrob(chllab(), rot = 90))
```

========================================================
<div align='center'>
<img src="time_series-figure/harry.jpg" alt="Drawing" style="width: 600px;"/>
</div>

========================================================
<div align='center'>
<img src="time_series-figure/onedoesnot.jpg" alt="Drawing" style="width: 600px;"/>
</div>

========================================================
<div align='center'>
<img src="time_series-figure/aliens.jpg" alt="Drawing" style="width: 600px;"/>
</div>

Lesson outline
========================================================
* What is a time series 
* Properties of time series
* Types of WQ/estuarine time series
* Exploratory analysis
* Quick QAQC 
* Formal trend tests

<img src="time_series-figure/aliens.jpg" alt="Drawing" style="width: 250px;"/>

What is a time series
========================================================
* As Hagrid says, anything with a time stamp
* Otherwise, it's a steady state dataset
* In theory, all data sets are time series
* Time series analysis considers observation **order** as a defining factor

What is a time series
========================================================
**Observations indexed and ordered by a time stamp**, they come in many shapes and sizes

```{r echo = F}
data(austres)
data(nottem)

n <- 100
smp <- rnorm(n)
nrm <- smp %>% 
  data.frame(
    dts = 1:n, 
    val = .,
    lab = 'Value'
  )

walk <- nrm %>% 
  mutate(val = cumsum(val))

aust <- data.frame(
  dts = as.numeric(time(austres)),
  val = as.numeric(austres)/ 1000,
  lab = 'Pop. (1e3)'
  )

nott <- data.frame(
  dts = as.numeric(time(nottem)),
  val = as.numeric(nottem),
  lab = 'Temp (F)'
  )

dats <- list(
  nrm = nrm, 
  walk = walk,
  austres = aust, 
  nottem = nott
  ) %>% 
  enframe

tsplo <- pmap(dats, function(name, value){
  
  lab <- unique(value$lab)
  ggplot(value, aes(x = dts, y = val)) +
    geom_line() + 
    geom_point(size = 0.8) + 
    scale_y_continuous(lab) +
    theme_bw() +
    theme(
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      axis.title.x = element_blank()
    ) + 
    ggtitle(name)
  
  })

grid.arrange(
  tsplo[[1]], tsplo[[2]], tsplo[[3]], tsplo[[4]],
  bottom = 'Time',
  ncol = 2
)
```

What is a time series
========================================================
**Observations indexed and ordered by a time stamp**, they can be composed of parts (real or artificial)
```{r, echo = F}
## subset for daily decomposition
dat <- subset(apadbwq, subset = c('2013-07-01 00:00', '2013-07-31 00:00'))

## decomposition and plot
test <- decomp(dat, param = 'do_mgl', frequency = 'daily')
plot(test)
```

What is a time series
========================================================
**Observations indexed and ordered by a time stamp**, they can be multivariate
```{r, echo = F}
dat <- apacpnut %>% 
  qaqc(qaqc_keep = NULL) %>% 
  select(-no2f, -no3f) %>% 
  rename(
    Orthophosphate = po4f, 
    Ammonium= nh4f, 
    `Nitrite/Nitrate` = no23f,
    Chlorophyll = chla_n
  )

ggpairs(dat[, -1]) +
  theme_bw()
```

What is a time series
========================================================
**Observations indexed and ordered by a time stamp**, they can be multivariate
```{r, echo = F}
dat <- dat %>%
  gather('var', 'val', -datetimestamp)
ggplot(dat, aes(x = datetimestamp)) +
  geom_ribbon(aes(ymax = val), ymin = 0, fill = 'blue', alpha = 0.6) + 
  geom_line(aes(y = val)) +
  geom_line(aes(y = val)) +
  facet_wrap(~var, ncol = 1, scale = 'free_y') +
  theme_bw() + 
  theme(axis.title.x = element_blank()) +
  ylab('Concentration (mg/L, ug/L)') +
  scale_x_datetime(expand = c(0, 0))
```

Properties of time series
========================================================
incremental: true

Assumptions for basic parametric models:
* Residuals are individually normally distributed
* Constant variance or homogeneity (i.e., even spread of residuals)
* Explanatory variables are deterministic
* Independence of observations or no pattern in residuals

Properties of time series
========================================================
Assumptions for basic parametric models:
```{r, echo = T, fig.height = 3, fig.width = 9, small.mar = T}
x <- rnorm(100)
y <- x + rnorm(100)
par(mfrow = c(1, 3))
plot(x); plot(y)
plot(y ~ x)
abline(reg = lm(y ~ x))
```

Properties of time series
========================================================
Assumptions for basic parametric models:
```{r, echo = T, small.mar = T}
par(mfrow = c(2, 2))
mod1 <- lm(y ~ x)
plot(mod1)
```

Properties of time series
========================================================
Assumptions for basic parametric models:
```{r, echo = T, fig.height = 3, fig.width = 9, small.mar = T}
x <- cumsum(x)
y <- cumsum(y)
par(mfrow = c(1, 3))
plot(x); plot(y)
plot(y ~ x)
abline(reg = lm(y ~ x))
```

Properties of time series
========================================================
Assumptions for basic parametric models:
```{r, echo = T, small.mar = T}
mod2 <- lm(y ~ x)
par(mfrow = c(2, 2))
plot(mod2)
```

Properties of time series
========================================================
Assumptions for basic parametric models:
```{r, echo = T, small.mar = T, fig.height = 3, fig.width = 9, small.mar = T}
par(mfrow = c(1, 2))
acf(resid(mod1))
acf(resid(mod2))
```

Properties of time series
========================================================
incremental: true

* Time series violate the common assumption that observations are independent
* Time is a 'nuisance' variable that must be accounted for
* Time has interesting properties that can be leveraged for analysis
* The structure of time series also represents analysis overhead

Exercise 1: A gentle introduction
========================================================
incremental: true

1) Load the datasets `sapdc` and `apacp`
2) How many variables?
3) What is the time range?
4) What is the time step?
5) Bonus: plot a time series

Exercise 1: A gentle introduction
========================================================
```{r}
load(file = 'https://USEPA.github.io/cerf_r/lessons/data/sapdc.RData')
load(file = 'https://USEPA.github.io/cerf_r/lessons/data/apacp.RData')
```


Properties of time series
========================================================
Time series structures in R

Properties of time series
========================================================
R packages for time series analysis

Types of WQ/estuarine time series
========================================================
discrete
continuous
regular/irregular, censored

Exploratory analysis
========================================================
Basic plots (use lubridate for conditional plots), decomposition plots, acf

QAQC screening
========================================================
complete cases? 
censored data?
bogus data?
missing observations (omit? impute?)

Formal trend analysis methods
========================================================
Kendall tests

Exercises
========================================================
exercise
